{"version":3,"sources":["logo.svg","DataFetching.js","ColorModeSwitcher.js","Eth.js","ourbunka_logo.svg","Logo.js","App.js","reportWebVitals.js","index.js"],"names":["DataFetching","useState","ethData","setEthData","ethInstantData","setEthInstantData","ethNormalData","setEthNormalData","ethSlowData","setEthSlowData","ethRealTimeData","setEthRealTimeData","useEffect","refresh","console","log","axios","get","then","res","data","instant","normal","slow","catch","err","result","w","borderRadius","p","fontSize","fontWeight","ethPrice","className","mt","color","align","FastGasPrice","Math","round","Number","EPSILON","space","gwei","usd","size","position","bottom","variant","colorScheme","onClick","ColorModeSwitcher","props","toggleColorMode","useColorMode","text","useColorModeValue","SwitchIcon","FaMoon","FaSun","_hover","bg","icon","Model","group","useRef","useGLTF","nodes","materials","ref","dispose","geometry","Cube","material","Cube001","shadowmap","scale","preload","Logo","src","logo","MyAnimatedBox","eth","React","useFrame","a","clock","getElapsedTime","current","rotation","y","App","vh","zIndex","to","_focus","boxShadow","_active","top","left","as","IconButton","isDisabled","isExternal","href","marginLeft","marginRight","right","height","fallback","OrbitControls","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08f71509.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport { Canvas, useLoader } from '@react-three/fiber' \nimport { Environment, OrbitControls, Stars, useGLTF } from '@react-three/drei'\nimport { Suspense, useRef } from 'react';\nimport './styles.css';\nimport { ChakraProvider, Box, Center, Text, Button, Stack, HStack} from '@chakra-ui/react'\nimport React, {useState, useEffect} from 'react';\nimport axios from 'axios';\n\nfunction DataFetching(){\n  const [ethData, setEthData] = useState([])\n  const [ethInstantData, setEthInstantData] = useState([])\n  const [ethNormalData, setEthNormalData] = useState([])\n  const [ethSlowData, setEthSlowData] = useState([])\n  const [ethRealTimeData, setEthRealTimeData] = useState([])\n\nuseEffect(() => {refresh();}, [], console.log(ethData), console.log(ethInstantData), console.log(ethNormalData), console.log(ethSlowData))\n\nconst refresh = () => (\n    axios.get(`https://ethgas.watch/api/gas`).then(res => { setEthInstantData(res.data.instant);setEthData(res.data);setEthNormalData(res.data.normal);setEthSlowData(res.data.slow) })\n    .catch(err => {\n      console.log(err)\n    }), \n    axios.get(`https://api.etherscan.io/api?module=gastracker&action=gasoracle&apikey=E55WW5Q427NJVEX1YXWJBC38XZJYEG6DR6 `).then(res => { setEthRealTimeData(res.data.result); console.log(res.data.result)})\n\n  )\n\n\n\nreturn(\n    <Box>\n    <Center>\n    <Box w=\"20rem\" borderRadius=\"md\" p=\"3\">\n    <Text fontSize=\"xs\" fontWeight=\"semibold\" >eth price: ${ethData.ethPrice}</Text>\n    <Text fontSize=\"sm\"></Text>\n    <Box className=\"stage\" borderRadius=\"xl\" p=\"3\" mt=\"2%\">\n    <Text color=\"white\" fontSize=\"32pt\" fontWeight=\"bold\" align=\"center\">{ethRealTimeData.FastGasPrice} Gwei</Text>\n    <Text color=\"white\" fontSize=\"xs\" align=\"center\" >~ ${Math.round((((ethRealTimeData.FastGasPrice *21000  )/1000000000 *ethData.ethPrice) + Number.EPSILON )*100)/100}</Text>\n    </Box>\n    </Box>\n    </Center>\n    <Center>\n    <Stack  w=\"20rem\">\n            <Center>\n            <HStack space={3}  >\n                <Box  p=\"2\">\n                <Text fontSize=\"xs\" align=\"center\">Average Instant</Text>\n                \n                <Box >\n                <Text fontWeight=\"semibold\" align=\"center\">{ethInstantData.gwei} Gwei</Text>\n                <Text fontSize=\"xs\" align=\"center\">~ ${ethInstantData.usd}</Text>\n                </Box>\n                </Box>\n\n                <Box p=\"2\">\n                <Text fontSize=\"xs\" align=\"center\">Average Normal</Text>\n                <Box>\n                <Text fontWeight=\"semibold\" align=\"center\">{ethNormalData.gwei} Gwei</Text>\n                <Text fontSize=\"xs\" align=\"center\">~ ${ethNormalData.usd}</Text>\n                </Box>\n                </Box>\n            \n            <Box  p=\"2\">\n                <Text fontSize=\"xs\" align=\"center\">Average Slow</Text>\n            <Box>\n                <Text fontWeight=\"semibold\" align=\"center\">{ethSlowData.gwei} Gwei</Text>\n                <Text fontSize=\"xs\" align=\"center\">~ ${ethSlowData.usd}</Text>\n            </Box>\n            </Box>\n        </HStack>\n        </Center>\n    </Stack>\n    </Center>\n    <Center >\n    <Button size=\"sm\" position=\"fixed\" bottom=\"3.5%\" variant=\"outline\" colorScheme=\"blue\" onClick={refresh}>Refresh</Button>\n    </Center>\n    </Box>\n)\n}\n\nexport default DataFetching","import React from \"react\";\nimport {useColorMode, useColorModeValue, IconButton} from '@chakra-ui/react'\nimport { FaMoon, FaSun} from 'react-icons/fa';\n\nexport const ColorModeSwitcher = props => {\n    const {toggleColorMode} = useColorMode();\n    const text = useColorModeValue('dark', 'light');\n    const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n\n    return(\n        <IconButton\n        _hover={{bg:\" rgba(233,212,212,0.2)\"}}\n        size=\"sm\"\n        borderRadius=\"100\"\n        fontSize=\"lg\"\n        aria-label={`Switch to ${text} mode`}\n        variant=\"ghost\"\n        color=\"current\"\n        onClick={toggleColorMode}\n        icon={<SwitchIcon/>}\n        {...props}\n        />\n    )\n}","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\n\nexport default function Model({ ...props }) {\n  const group = useRef()\n  const { nodes, materials } = useGLTF('/eth.glb')\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <mesh geometry={nodes.Cube.geometry} material={materials['Material.003']} />\n      <mesh geometry={nodes.Cube001.geometry} material={materials['Material.001']} />\n      <mesh geometry={nodes.shadowmap.geometry} material={materials.shadowmap} position={[0, -2.3, 0]} scale={65.88} />\n    </group>\n  )\n}\n\nuseGLTF.preload('/eth.glb')\n","export default __webpack_public_path__ + \"static/media/ourbunka_logo.6f04b89f.svg\";","import React from 'react';\nimport { Image } from '@chakra-ui/react';\nimport logo from './ourbunka_logo.svg';\n\n\nconst Logo = props => {\n  return <Image src={logo} {...props} />;\n};\n\nexport default Logo","import logo from './logo.svg';\nimport { Canvas, useLoader, useFrame } from '@react-three/fiber' \nimport { Environment, OrbitControls, Stars, useGLTF } from '@react-three/drei'\nimport { Suspense, useRef } from 'react';\nimport './styles.css';\nimport { ChakraProvider, Box, Center, Text, Menu, MenuButton, IconButton,  MenuList, MenuItem, Link, isDisabled, isExternal} from '@chakra-ui/react'\nimport React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport DataFetching from './DataFetching'\nimport { ColorModeSwitcher } from './ColorModeSwitcher';\nimport Eth from './Eth'\nimport {AddIcon, ExternalLinkIcon, HamburgerIcon,  RepeatIcon, EditIcon} from '@chakra-ui/icons'\nimport { FaGithub, FaGooglePlay } from 'react-icons/fa';\nimport Logo from './Logo';\n\nfunction MyAnimatedBox() {\n  const eth = React.useRef();\n\n  useFrame(({ clock }) => {\n    const a = clock.getElapsedTime() /3\n    eth.current.rotation.y = a; // the value will be 0 at scene initialization and grow each frame\n  })\n  return (\n    <mesh ref={eth}>\n      <Eth/>\n    </mesh>\n  )\n}\n\n\n\nfunction App() {\n  return (\n  <ChakraProvider vh=\"120vh\" >\n  <Link zIndex=\"1000\" to=\"/\"><IconButton zIndex=\"999\" _focus={{boxShadow: \"none\"}} size=\"md\" _hover={{ bg: \"none\" }} _active={{ bg:\"none\"}} bg=\"none\" position=\"fixed\" top=\"2.5%\" left=\"5%\" icon={<Logo/>}></IconButton></Link>\n  <Menu>\n  <MenuButton\n    position=\"fixed\"\n    bottom=\"3.5%\"\n    left=\"5%\"\n    as={IconButton}\n    aria-label='Options'\n    icon={<HamburgerIcon />}\n    variant='outline'\n  />\n  <MenuList>\n    <Link ><MenuItem isDisabled icon={<FaGooglePlay />}>\n      Install App\n    </MenuItem></Link>\n    <Link isExternal><MenuItem icon={<FaGithub />}>\n      Open Source\n    </MenuItem></Link>\n    <Link isExternal href=\"http://ourbunka.com\"><MenuItem icon={<ExternalLinkIcon />} >\n      ourbunka.com\n    </MenuItem></Link>\n    <Text color=\"grey\"  fontSize=\"xs\" marginLeft=\"12px\" marginRight=\"12px\">Design by OURBUNKA MOTION</Text>\n    <Text marginLeft=\"12px\" marginRight=\"12px\" color=\"grey\" fontSize=\"xs\">\n    Data Powered by Etherscan.io & ethgas.watch APIs  \n    </Text>\n  </MenuList>\n</Menu>\n  <ColorModeSwitcher position=\"fixed\" bottom=\"3.5%\" right=\"5%\"/>\n  <Center>\n      <Box w=\"28rem\" height=\"28rem\" borderRadius=\"xl\">\n      <Canvas>\n        <Suspense fallback={null}>\n          <hemisphereLight/>\n          <MyAnimatedBox/>\n          <OrbitControls/>\n        </Suspense>\n        </Canvas>\n        </Box>\n        </Center>\n    <Box>\n      <DataFetching/>\n   </Box>\n  </ChakraProvider>\n  );\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}